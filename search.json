{"Classes/MMMCataphote/TypeInfo.html#/unknown":{"name":"unknown","abstract":"<p>Used when we cannot figure out the contents of a decodable, like when it&rsquo;s empty or has unsupported features.</p>","parent_name":"TypeInfo"},"Classes/MMMCataphote/TypeInfo.html#/primitive(_:)":{"name":"primitive(_:)","abstract":"<p>Simple type like Int, Double or String.</p>","parent_name":"TypeInfo"},"Classes/MMMCataphote/TypeInfo.html#/object(_:)":{"name":"object(_:)","abstract":"<p>Another Decodable struct or class.</p>","parent_name":"TypeInfo"},"Classes/MMMCataphote/TypeInfo.html#/array(_:)":{"name":"array(_:)","parent_name":"TypeInfo"},"Classes/MMMCataphote/TypeInfo.html#/dictionary(_:_:)":{"name":"dictionary(_:_:)","parent_name":"TypeInfo"},"Classes/MMMCataphote/TypeInfo.html#/optional(_:)":{"name":"optional(_:)","abstract":"<p>An optional wrapping the given type.</p>","parent_name":"TypeInfo"},"Classes/MMMCataphote/TypeInfo.html#/objects()":{"name":"objects()","abstract":"<p>Objects used in the description of this type (without recursing into fields of these objects).","parent_name":"TypeInfo"},"Classes/MMMCataphote/TypeInfo.html#/description":{"name":"description","parent_name":"TypeInfo"},"Classes/MMMCataphote/Field.html#/name":{"name":"name","parent_name":"Field"},"Classes/MMMCataphote/Field.html#/typeInfo":{"name":"typeInfo","parent_name":"Field"},"Classes/MMMCataphote/Field.html#/description":{"name":"description","parent_name":"Field"},"Classes/MMMCataphote/Object.html#/name":{"name":"name","abstract":"<p>The name of the corresponding type.</p>","parent_name":"Object"},"Classes/MMMCataphote/Object.html#/fields":{"name":"fields","abstract":"<p>All the fields of the object that would participate in decoding.</p>","parent_name":"Object"},"Classes/MMMCataphote/Object.html#/description":{"name":"description","parent_name":"Object"},"Classes/MMMCataphote/Object.html#/==(_:_:)":{"name":"==(_:_:)","parent_name":"Object"},"Classes/MMMCataphote/Reflection.html#/typeInfo":{"name":"typeInfo","abstract":"<p>The main description of the type being reflected.</p>","parent_name":"Reflection"},"Classes/MMMCataphote/Reflection.html#/objects":{"name":"objects","abstract":"<p>All non-primitive (&ldquo;object&rdquo;) types used in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MMMCataphote/Reflection.html#/typeInfo\">typeInfo</a></code>, indexed by their names.</p>","parent_name":"Reflection"},"Classes/MMMCataphote/Reflection.html#/description":{"name":"description","parent_name":"Reflection"},"Classes/MMMCataphote/Reflection.html#/debugDescription":{"name":"debugDescription","parent_name":"Reflection"},"Classes/MMMCataphote.html#/init()":{"name":"init()","parent_name":"MMMCataphote"},"Classes/MMMCataphote/Reflection.html":{"name":"Reflection","parent_name":"MMMCataphote"},"Classes/MMMCataphote/Object.html":{"name":"Object","abstract":"<p>Describes a non-primitive object, i.e. the one different from &ldquo;primitives&rdquo; such asÂ Int, String,","parent_name":"MMMCataphote"},"Classes/MMMCataphote/Field.html":{"name":"Field","parent_name":"MMMCataphote"},"Classes/MMMCataphote/TypeInfo.html":{"name":"TypeInfo","parent_name":"MMMCataphote"},"Classes/MMMCataphote.html#/reflect(_:)":{"name":"reflect(_:)","abstract":"<p>Main method of the helper: you give a type and get its limited description if everything is supported.</p>","parent_name":"MMMCataphote"},"Classes/MMMCataphote.html":{"name":"MMMCataphote","abstract":"<p>Limited reflection for <code>Decodable</code> types.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"}}